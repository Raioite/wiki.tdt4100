test objectstructures.CardHand

import java.util.Collection

sequence constructor {
	-->
	state {
		cardCount == 0;
	}
}

sequence deal {
	
	instance CardDeck deck = new CardDeck(2)
	
	-- deck.deal(cardHand, 3) -->
	state {
		it ?= #["C2", "C1", "D2"]
	}
}

sequence dealPlay {
	
	instance CardDeck deck = new CardDeck(2)

	-- deck.deal(cardHand, 3) -->
	state {
		it ?= #["C2", "C1", "D2"]
	}
	-- play(1) --> state { it ?= #["C2", "D2"] }
	-- play(0) --> state { it ?= #["D2"] }
	-- play(0) --> state { cardCount == 0 }
}

method boolean ?= (CardHand it, Collection<String> toStrings) {
	cardCount ?= toStrings.size 
	var i = 0
	for (toString : toStrings) {
		val card = getCard(i)
		String.valueOf(card.suit) + card.face ?= toString 
		i = i + 1
	}
	true
}
